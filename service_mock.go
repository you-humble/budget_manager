// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go
//
// Generated by this command:
//
//	mockgen -source=handler.go -package=main -destination=service_mock.go WalletService
//

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWalletService is a mock of WalletService interface.
type MockWalletService struct {
	ctrl     *gomock.Controller
	recorder *MockWalletServiceMockRecorder
	isgomock struct{}
}

// MockWalletServiceMockRecorder is the mock recorder for MockWalletService.
type MockWalletServiceMockRecorder struct {
	mock *MockWalletService
}

// NewMockWalletService creates a new mock instance.
func NewMockWalletService(ctrl *gomock.Controller) *MockWalletService {
	mock := &MockWalletService{ctrl: ctrl}
	mock.recorder = &MockWalletServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletService) EXPECT() *MockWalletServiceMockRecorder {
	return m.recorder
}

// AddOperation mocks base method.
func (m *MockWalletService) AddOperation(userID int64, opt Operation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddOperation", userID, opt)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddOperation indicates an expected call of AddOperation.
func (mr *MockWalletServiceMockRecorder) AddOperation(userID, opt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddOperation", reflect.TypeOf((*MockWalletService)(nil).AddOperation), userID, opt)
}

// CreateWallet mocks base method.
func (m *MockWalletService) CreateWallet(wo Wallet) (Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", wo)
	ret0, _ := ret[0].(Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockWalletServiceMockRecorder) CreateWallet(wo any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockWalletService)(nil).CreateWallet), wo)
}

// ShowWallet mocks base method.
func (m *MockWalletService) ShowWallet(id int64) (Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowWallet", id)
	ret0, _ := ret[0].(Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShowWallet indicates an expected call of ShowWallet.
func (mr *MockWalletServiceMockRecorder) ShowWallet(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowWallet", reflect.TypeOf((*MockWalletService)(nil).ShowWallet), id)
}
